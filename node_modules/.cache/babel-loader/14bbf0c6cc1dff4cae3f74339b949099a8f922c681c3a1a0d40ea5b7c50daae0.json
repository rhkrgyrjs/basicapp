{"ast":null,"code":"var _jsxFileName = \"/home/hyogun/\\uBC14\\uD0D5\\uD654\\uBA74/react/basicapp/src/06/Traffic.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Traffic() {\n  _s();\n  // 전체 fetch 데이터\n  const [tdata, setTdata] = useState();\n\n  // 대분류 데이터\n  const [c1, setC1] = useState();\n  const getFetchData = () => {\n    let url = `https://api.odcloud.kr/api/15070282/v1/uddi:34f1f0b1-1289-49db-be1b-a4566880bb97?page=1&perPage=18&serviceKey=${process.env.REACT_APP_API_KEY}`;\n    console.log(url);\n    fetch(url).then(resp => resp.json()) // 정상작동\n    .then(data => setTdata(data.data)) // 데이터 저장해놓기\n    .catch(err => console.log(err)); // 오류발생시\n  };\n\n  // 컴포넌트 생성시 fetch\n  useEffect(() => {\n    getFetchData();\n  }, []); // dependency array가 공백이면 한번만 호출\n\n  // tdata가 변경되었을 때\n  useEffect(() => {\n    if (!tdata) return; // tdata 없을 때는 바로 리턴\n\n    // 대분류 만들기\n    let tm = tdata.map(item => item['사고유형대분류']);\n    tm = [...new Set(tm)];\n    console.log(tm);\n  }, [tdata]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Traffic\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Traffic, \"hZDS7WJj+KE0o7vx4WPypVvt9uc=\");\n_c = Traffic;\nvar _c;\n$RefreshReg$(_c, \"Traffic\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Traffic","_s","tdata","setTdata","c1","setC1","getFetchData","url","process","env","REACT_APP_API_KEY","console","log","fetch","then","resp","json","data","catch","err","tm","map","item","Set","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/hyogun/바탕화면/react/basicapp/src/06/Traffic.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nexport default function Traffic() \n{\n  // 전체 fetch 데이터\n  const [tdata, setTdata] = useState();\n\n  // 대분류 데이터\n  const [c1, setC1] = useState();\n\n  const getFetchData = () => {\n    let url = `https://api.odcloud.kr/api/15070282/v1/uddi:34f1f0b1-1289-49db-be1b-a4566880bb97?page=1&perPage=18&serviceKey=${process.env.REACT_APP_API_KEY}`;\n    console.log(url);\n\n    fetch(url)\n     .then(resp => resp.json()) // 정상작동\n     .then(data => setTdata(data.data)) // 데이터 저장해놓기\n     .catch(err => console.log(err)) // 오류발생시\n  };\n\n  // 컴포넌트 생성시 fetch\n  useEffect(() => {\n  getFetchData();    \n  }, []); // dependency array가 공백이면 한번만 호출\n\n  // tdata가 변경되었을 때\n  useEffect(() => {\n    if (!tdata) return; // tdata 없을 때는 바로 리턴\n\n    // 대분류 만들기\n    let tm = tdata.map( item => item['사고유형대분류'] );\n    tm = [... new Set(tm)];\n    console.log(tm);\n  }, [tdata]);\n  return (\n    <div>\n      Traffic\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,OAAOA,CAAA,EAC/B;EAAAC,EAAA;EACE;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC;;EAEpC;EACA,MAAM,CAACQ,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE9B,MAAMU,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,GAAG,GAAG,iHAAiHC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAE;IAC1JC,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC;IAEhBM,KAAK,CAACN,GAAG,CAAC,CACRO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CAC1BF,IAAI,CAACG,IAAI,IAAId,QAAQ,CAACc,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;IAAA,CAClCC,KAAK,CAACC,GAAG,IAAIR,OAAO,CAACC,GAAG,CAACO,GAAG,CAAC,CAAC,EAAC;EACnC,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IAChBS,YAAY,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACAT,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,KAAK,EAAE,OAAO,CAAC;;IAEpB;IACA,IAAIkB,EAAE,GAAGlB,KAAK,CAACmB,GAAG,CAAEC,IAAI,IAAIA,IAAI,CAAC,SAAS,CAAE,CAAC;IAC7CF,EAAE,GAAG,CAAC,GAAI,IAAIG,GAAG,CAACH,EAAE,CAAC,CAAC;IACtBT,OAAO,CAACC,GAAG,CAACQ,EAAE,CAAC;EACjB,CAAC,EAAE,CAAClB,KAAK,CAAC,CAAC;EACX,oBACEH,OAAA;IAAAyB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAAC3B,EAAA,CArCuBD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}